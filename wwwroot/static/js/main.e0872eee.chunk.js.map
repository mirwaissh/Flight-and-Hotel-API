{"version":3,"sources":["logo.svg","components/FlightCards.js","components/FindFlight.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FlightCards","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOnchange","event","setState","defineProperty","target","id","value","saveFlight","data","Details","JSON","stringify","fetch","method","mode","cache","credentials","headers","Content-Type","body","then","res","json","console","log","catch","err","choseFlight","e","flightobj","preventDefault","state","FName","LName","Email","_this2","react_default","a","createElement","reactstrap_es","concstate","flights","map","x","sm","key","QuoteId","top","width","src","alt","MinPrice","fromcity","fromairport","tocity","toairport","type","name","placeholder","onChange","onClick","Component","FindFlight","getFormattedDate","date","year","getFullYear","month","getMonth","toString","length","day","getDate","getFlightInfo","findAirport","assertThisInitialized","city","X-Mashape-Key","process","X-Mashape-Host","response","error","jsonData","Places","PlaceId","findFlight","datefrom","dateto","fromdate","df","Date","todate","dt","ValidationErrors","Quotes","className","for","FlightCards_FlightCards","App","logo","FindFlight_FindFlight","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","concat","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e0872eee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport { Card, Button, CardImg, CardTitle, Input, \r\n  CardSubtitle, CardBody, Row, Col } from 'reactstrap';\r\n\r\nexport default class FlightCards extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    \r\n    this.handleOnchange = (event) => {\r\n      this.setState({ [event.target.id]: event.target.value });\r\n    }\r\n\r\n    this.saveFlight = (data) => {\r\n      data.Details = JSON.stringify(data.Details);\r\n      //data = JSON.stringify(data);\r\n      //data = JSON.stringify(data);\r\n      fetch(\"/api/FlightAndHotels\", {\r\n        method: \"POST\",\r\n        mode: \"cors\", \r\n        cache: \"no-cache\", \r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n      }).then((res) => res.json())\r\n        .then((data) => console.log(data))\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    this.choseFlight = (e, flightobj) => {\r\n      e.preventDefault();\r\n      console.log(flightobj);\r\n      this.setState({ Details: flightobj }, () => { this.saveFlight(this.state) });\r\n    }\r\n\r\n    this.state = {\r\n      FName: null,\r\n      LName: null,\r\n      Email: null,\r\n      Details: null \r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Row>\r\n        {this.props.concstate.flights.map(x => \r\n        <Col sm=\"6\">\r\n          <Card key={x.QuoteId}>\r\n            <CardImg top width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=256%C3%97180&w=256&h=180\" alt=\"Card image cap\" />\r\n            <CardBody>\r\n              <CardTitle>From ${x.MinPrice}</CardTitle>\r\n              <CardSubtitle>{this.props.concstate.fromcity}({this.props.concstate.fromairport}) - {this.props.concstate.tocity}({this.props.concstate.toairport})</CardSubtitle>\r\n              <Input type=\"text\" name=\"FName\" id=\"FName\" placeholder=\"First Name\" onChange={this.handleOnchange} />\r\n              <Input type=\"text\" name=\"LName\" id=\"LName\" placeholder=\"Last Name\" onChange={this.handleOnchange} />\r\n              <Input type=\"email\" name=\"Email\" id=\"Email\" placeholder=\"Email\" onChange={this.handleOnchange} />\r\n              <Button value={x} onClick={(e)=>this.choseFlight(e, x)}>Chose</Button>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n        )}\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport FlightCards from './FlightCards';\r\n\r\nexport default class FindFlight extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.getFormattedDate = (date) => {\r\n      var year = date.getFullYear();\r\n\r\n      var month = (1 + date.getMonth()).toString();\r\n      month = month.length > 1 ? month : '0' + month;\r\n\r\n      var day = (1 + date.getDate()).toString();\r\n      day = day.length > 1 ? day : '0' + day;\r\n\r\n      return year + '-' + month + '-' + day;\r\n    }\r\n\r\n    this.getFlightInfo = (event) => {\r\n      event.preventDefault();\r\n      this.findAirport(this.state.fromcity, 'fromairport', this);\r\n      this.findAirport(this.state.tocity, 'toairport', this);\r\n\r\n    }\r\n\r\n    this.findAirport = (city, key) => {\r\n      fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.mashape.com/apiservices/autosuggest/v1.0/US/USD/en-US/?query=\"+city, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"X-Mashape-Key\": process.env.REACT_APP_MASHAPE_API_KEY,\r\n          \"X-Mashape-Host\": \"skyscanner-skyscanner-flight-search-v1.p.mashape.com\"\r\n        }\r\n      }).then(response => {\r\n        return response.json();\r\n      }, error =>  {\r\n      }).then(jsonData => {\r\n        this.setState({ [key]: jsonData.Places[0].PlaceId });\r\n        console.log(this.state);\r\n        if (this.state.toairport.length > 0 && this.state.fromairport.length > 0){\r\n          this.findFlight();\r\n        }\r\n      })\r\n    }\r\n\r\n    this.findFlight = () => {\r\n      let datefrom;\r\n      let dateto;\r\n      if(this.state.fromdate === '') datefrom = 'anytime';\r\n      else {\r\n        let df = new Date(this.state.fromdate);\r\n        datefrom = this.getFormattedDate(df);\r\n      }\r\n      if(this.state.todate === '') dateto = 'anytime';\r\n      else {\r\n        let dt = new Date(this.state.todate);\r\n        dateto = this.getFormattedDate(dt);\r\n      }\r\n      console.log('Date From: '+datefrom);\r\n      console.log('Date To: '+dateto);\r\n\r\n      fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.mashape.com/apiservices/browsedates/v1.0/US/USD/en-US/\" + this.state.fromairport + \"/\" + this.state.toairport + \"/\" + datefrom + \"/\" + dateto, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"X-Mashape-Key\": process.env.REACT_APP_MASHAPE_API_KEY,\r\n          \"X-Mashape-Host\": \"skyscanner-skyscanner-flight-search-v1.p.mashape.com\"\r\n        }\r\n      }).then(response => {\r\n        return response.json();\r\n      }, error => {\r\n      }).then(jsonData => {\r\n        console.log(jsonData);\r\n        if (jsonData.ValidationErrors != null) this.setState({ flights: [] });\r\n        else this.setState({ flights: jsonData.Quotes });\r\n      })\r\n    }\r\n\r\n    this.handleOnchange = (event) => {\r\n      this.setState({[event.target.id]: event.target.value });\r\n    }\r\n\r\n    this.state={\r\n      fromcity: '',\r\n      tocity:'',\r\n      fromdate: '',\r\n      todate: '',\r\n      fromairport: '',\r\n      toairport: '',\r\n      flights: [],\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <Form>\r\n          <FormGroup>\r\n            <Label for=\"fromcity\">From City</Label>\r\n            <Input type=\"text\" name=\"fromcity\" id=\"fromcity\" placeholder=\"City Flying From\" onChange={this.handleOnchange} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"tocity\">To City</Label>\r\n            <Input type=\"text\" name=\"tocity\" id=\"tocity\" placeholder=\"City Flying To\" onChange={this.handleOnchange} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"fromdate\">From Date (Leave Blank for Anytime)</Label>\r\n            <Input type=\"date\" name=\"fromdate\" id=\"fromdate\" onChange={this.handleOnchange} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"todate\">To Date (Leave Blank for Anytime)</Label>\r\n            <Input type=\"date\" name=\"todate\" id=\"todate\" onChange={this.handleOnchange} />\r\n          </FormGroup>\r\n          <Button onClick={this.getFlightInfo}>Check Availability</Button>\r\n        </Form>\r\n        <br />\r\n        { this.state.flights.length > 1 ? <FlightCards concstate={this.state} /> : null }\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport FindFlight from './components/FindFlight';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h1 className=\"App-title\">Welcome to Flights</h1>\n          </header>\n        </div>\n        <FindFlight></FindFlight>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}